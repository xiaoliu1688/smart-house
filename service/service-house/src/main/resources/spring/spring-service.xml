<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">


<!--    引入spring-dao.xml-->
    <import resource="spring-dao.xml"></import>

<!--    扫描service下的包-->
    <context:component-scan base-package="com.atguigu.service"></context:component-scan>

<!--    开启事务管理器-->
    <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
        <!--        指明该事务管理器管理的datasource
                    因为管理事务都是通过连接来管理，datasource又是管理连接的类，所以此处指明
                    事务管理器所对应的datasource-->
        <property name="dataSource" ref="dataSource"></property>

    </bean>

    <!--
        开启事务的注解驱动
        通过注解@Transactional所标识的方法或标识的类中所有的方法，都会被事务管理器管理事务
        -->
    <!-- transaction-manager属性的默认值是transactionManager，如果事务管理器bean的id正好就
    是这个默认值，则可以省略这个属性 -->
<!--    proxy-target-class这个属性的作用是设置发布服务创建的代理类对象通过cglib创建-->
    <tx:annotation-driven proxy-target-class="true"></tx:annotation-driven>


</beans>